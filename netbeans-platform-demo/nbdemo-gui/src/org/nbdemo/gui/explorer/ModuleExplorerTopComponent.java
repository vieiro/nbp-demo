/*
 * Copyright 2017 Antonio Vieiro (antonio@vieiro.net)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.nbdemo.gui.explorer;

import java.awt.BorderLayout;
import javax.swing.ListSelectionModel;
import org.nbdemo.introspection.nodes.NBAllModulesNode;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.explorer.ExplorerManager;
import org.openide.explorer.ExplorerUtils;
import org.openide.explorer.view.OutlineView;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.nbdemo.gui.explorer//ModuleExplorer//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "ModuleExplorerTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "explorer", openAtStartup = true)
@ActionID(category = "Window", id = "org.nbdemo.gui.explorer.ModuleExplorerTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_ModuleExplorerAction",
        preferredID = "ModuleExplorerTopComponent"
)
@Messages({
    "CTL_ModuleExplorerAction=Module explorer",
    "CTL_ModuleExplorerTopComponent=Module explorer",
    "HINT_ModuleExplorerTopComponent=All modules that support this application"
})
public final class ModuleExplorerTopComponent extends TopComponent implements ExplorerManager.Provider {

    private ExplorerManager explorerManager;
    private NBAllModulesNode allNodes;
    private OutlineView outlineView;

    public ModuleExplorerTopComponent() {
        initComponents();
        setName(Bundle.CTL_ModuleExplorerTopComponent());
        setToolTipText(Bundle.HINT_ModuleExplorerTopComponent());

        allNodes = new NBAllModulesNode();
        explorerManager = new ExplorerManager();
        associateLookup(ExplorerUtils.createLookup(explorerManager, getActionMap()));
        explorerManager.setRootContext(allNodes);
        outlineView = new OutlineView();
        outlineView.getOutline().setRootVisible(false);
        outlineView.getOutline().setShowGrid(false);

        add(outlineView, BorderLayout.CENTER);
    }

    @Override
    public ExplorerManager getExplorerManager() {
        return explorerManager;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
